*, *:before, *:after {
  box-sizing: border-box;
}
body {
  font-family: "Helvetica", sans-serif;
  margin: 0;
  padding: 0.5%;
  background: #bdf;
}
.main {
  margin-right: auto;
  margin-left: auto; /* centered */
  max-width: 600px;
  border: 1px solid #ccf;
  padding: 1em;
  background: #f8f8f8;
}
a       { text-decoration: none; }
a:hover { text-decoration: underline; }
h1 {
  border-bottom: 10px solid #bdf;
}
form, fieldset {
  margin-top: 10px;
}

/* Form layout **************************************************************************

   The styling here allows the form to reformat itself when the width is small.
   It's best to avoid media queries like `@media screen and (max-width: 300px)`
   for this, because media queries are not based on how much space you actually 
   have available. If the screen itself is huge but the form is squashed into 
   250 pixels (e.g. because the form is inside a small modal), it would be wrong
   to use the layout designed for a big screen in that context.

   And yes, this works in Internet Explorer 11.
*/
form p, form p > label:only-child {
  display: flex;
  flex-flow: row wrap;
  align-items: center; /* vertical alignment */
  width: 100%;
}
.labelspan {
  flex: 1 0;
  min-width: 10em;
}
.labelspan ~ .inputspan, .labelspan ~ label {
  flex: 2 0;
  min-width: 15em;
}
textarea, input[type="text"], input[type="email"] {
  width: 100%;
}
.errorspan {
  display: block;
  color: red;
}
/*.labelspan {
  clear: left;
  float: left;

  display: block;
  overflow: auto;
  min-width: 33%;
  width: 10em;
}
.labelspan ~ .inputspan {
  display: block;
  overflow: auto;
  min-width: 67%;
}*/
.labelspan {
  margin-top: 0.2em;
  margin-bottom: 0.2em;
}

/* Skinning of controls (input/textarea/button) ****************************************/

/* :user-invalid has been proposed for fields that become invalid AFTER user interaction, 
   but the only real-life implementation of this is FireFox's :-moz-ui-invalid (2020/04).
   Therefore, this library uses the user-invalid class to simulate this. */
input[type="text"].user-invalid, input[type="number"].user-invalid, input[type="email"].user-invalid, textarea.user-invalid {
  border: 1px solid red;
}
input[type="text"], input[type="range"] {
  margin-right: 1%;
  vertical-align: middle; /* fix alignment between TextBox and Slider in Chrome, FF, IE */
}
input[type="date"], input[type="time"] {
  width: 11em /* Chrome needs the most space */
}
textarea, input[type="text"], input[type="number"], input[type="date"], input[type="time"], input[type="email"] {
  padding: .5em;
  border-radius: 4px;
  border: 1px solid #ccc;
  box-shadow: inset 0 1px 3px #ddd;
}
input[type=checkbox], input[type=radio] {
  transform: scale(1.4);
  margin-right: 0.5em;
}
input[type="range"] {
  display: inline-block;
}
button {
  display: inline-block;
  border: 1px solid #05B;
  padding: 0.8em 2em;
  border-radius: 4px;
  margin: 0;
  background: #07E;
  color: #FFF;
  font-size: 1em;
  line-height: 1;
  cursor: pointer;
  text-align: center;
}
.errorspan {
  margin-top: 0.2em;
  margin-bottom: 0.2em;
  max-height: 2.5em;
  min-height: 1em;
  transition: 0.5s;
}
.errorspan:empty {
  margin: 0;
  max-height: 0em;
  min-height: 0em;
  transition: 0.5s;
}
